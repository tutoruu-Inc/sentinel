type Session {
  _id: String!
  course: Course!
  student: User!
  rating: Int!
  location: String
  created_date: String!
  tutor: Tutor!
  is_completed: Boolean!
  is_accepted: Boolean!
  payment_fulfilled: Boolean!
  topic: String
  additional_info: String
  payment_amount: Float!
}

extend type Query {
  session(_id: String!): Session
  sessions(input: QueryOptions): [Session!]!
}

input CreateSessionInput {
  course: String!
  student: String!
  location: String
  topic: String
  additional_info: String
}

input UpdateSessionInput {
  rating: Int!
  is_completed: Boolean!
  is_accepted: Boolean!
  payment_fulfilled: Boolean!
}

extend type Mutation {
  createSession(input: CreateSessionInput!): Session!
  updateSession(_id: String!, input: UpdateSessionInput!): Session!
  acceptSession(_id: String!, tutor_id: String!): Session!
  rejectSession(_id: String!, tutor_id: String!): Session!
  deleteSession(_id: String!): Session!
}
