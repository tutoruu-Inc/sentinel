type Slot {
    day: String!
    slots: [Int!]!
}

input SlotInput {
    day: String!
    slots: [Int!]!
}

type Tutor {
  _id: String!
  courses: [Course!]!
  rate: Float!
  user: User!
  schedule: [Slot!]!
  date: String!
  in_person: Boolean!
  zoom_link: String
}

extend type Query {
    tutor(_id: String): Tutor
    tutor(username: String): Tutor
    tutors(input: QueryOptions): [Tutor!]!
}

input CreateTutorInput {
    application_id: String
    user_id: String
}

input UpdateTutorInput {
    rate: Float!
    schedule: [SlotInput!]!
    in_person: Boolean!
    zoom_link: String
}

extend type Mutation {
    createTutor(input: CreateTutorInput): Tutor!
    updateTutor(input: UpdateTutorInput): Tutor!
    deleteTutor(_id: String!): Tutor!
}